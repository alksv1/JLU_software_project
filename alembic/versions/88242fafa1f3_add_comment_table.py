"""add_comment_table

Revision ID: 88242fafa1f3
Revises: 9f236671dab7
Create Date: 2025-09-25 11:19:17.354684

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '88242fafa1f3'
down_revision: Union[str, Sequence[str], None] = '9f236671dab7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False, comment='关联的预约ID'),
    sa.Column('rating', sa.Integer(), nullable=False, comment='评分(1-5分)'),
    sa.Column('content', sa.String(length=100), nullable=True, comment='评论内容'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='fk_comments_booking'),
    sa.PrimaryKeyConstraint('id'),
    # 添加唯一约束，确保每个预约只有一个评价
    sa.UniqueConstraint('booking_id', name='uq_comments_booking')
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    # ### end Alembic commands ###